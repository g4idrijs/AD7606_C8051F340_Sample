C51 COMPILER V9.01   MAIN                                                                  05/28/2015 16:51:16 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN MAIN.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE MAIN.c OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "compiler_defs.h"
   2          #include <c8051f340.h>
   3          #include <stddef.h>
   4          #include <stdio.h>
   5          #include "USB_API.h"
   6          //#include "call.asm"
   7          
   8          /*** [BEGIN] USB Descriptor Information [BEGIN] ***/
   9          code const UINT USB_VID = 0x10C4;                                                               
  10          code const UINT USB_PID = 0xEA61;
  11          code const BYTE USB_MfrStr[] = {0x1A,0x03,'S',0,'i',0,'l',0,'i',0,'c',0,'o',0,'n',0,' ',0,'L',0,'a',0,'b',
             -0,'s',0};
  12          code const BYTE USB_ProductStr[] = {0x10,0x03,'U',0,'S',0,'B',0,' ',0,'A',0,'P',0,'I',0};
  13          code const BYTE USB_SerialStr[] = {0x0A,0x03,'i',0,'d',0,'r',0,'i',0};
  14          code const BYTE USB_MaxPower = 15;
  15          code const BYTE USB_PwAttributes = 0x80; // Bus-powered, remote wakeup not supported
  16          code const UINT USB_bcdDevice = 0x0100;
  17          /*** [ END ] USB Descriptor Information [ END ] ***/
  18          
  19          /*** [BEGIN]  [BEGIN] ***/
  20          sbit CS_RD=P0^0;
  21          sbit CONVSTAB=P0^1;
  22          sbit BUSY=P0^6;
  23          sbit REST=P0^7;
  24          sbit OA=P2^4;
  25          sbit OB=P2^5;
  26          sbit OC=P2^6;
  27          sbit RAGE= P2^7;
  28          sbit Led = P2^3;
  29          /*** [ END ]  [ END ] ***/
  30          
  31          /*** [BEGIN]  [BEGIN] ***/
  32          sfr16 TMR2RL = 0xca; // Timer2 reload value 
  33          sfr16 TMR2 = 0xcc; // Timer2 counter
  34          
  35          #define SYSCLK 48000000
  36          #define TIMER_PRESCALER 12  // Based on Timer2 CKCON and TMR2CN settings
  37          #define RATE    120000
  38          // There are SYSCLK/TIMER_PRESCALER timer ticks per second, so
  39          // SYSCLK/TIMER_PRESCALER timer ticks per second.
  40          #define TIMER_TICKS_PER_S  SYSCLK/TIMER_PRESCALER
  41          // NoteRATE*TIMER_TICKS_PERS should not exceed 65535 (0xFFFF)for the 16-bit timer
  42          #define AUX1 TIMER_TICKS_PER_S/RATE
  43          /*** [ END ]  [ END ] ***/
  44          
  45          /*** [BEGIN]  [BEGIN] ***/
  46          #define N 16
  47          U8 out1[N];
  48          U8 out2[N];
  49          U8 T1;
  50          U8 T2;
  51          U8 Flag1;
  52          U8 Flag2;
  53          U8 i;
  54          /*** [ END ]  [ END ] ***/
C51 COMPILER V9.01   MAIN                                                                  05/28/2015 16:51:16 PAGE 2   

  55          
  56          /*** [BEGIN]  [BEGIN] ***/
  57          void Oscilitator_Init(void);
  58          void Port_Init(void);
  59          void Suspend_Device(void);
  60          void Delay(void);       
  61          void AD7606_Init(void);
  62          void AD7606_Read(void);
  63          void Timer2_Init(U8 counts);
  64          void Timer2_ISR (void);
  65          /*** [ END ]  [ END ] ***/
  66          
  67          void main(void)
  68          {
  69   1              PCA0MD &= ~0x40;
  70   1      
  71   1              Oscilitator_Init();
  72   1              Port_Init(); 
  73   1              USB_Clock_Start();
  74   1              CLKSEL |= 0x02;
  75   1              USB_Init(USB_VID,USB_PID,USB_MfrStr,USB_ProductStr,USB_SerialStr,USB_MaxPower,USB_PwAttributes,USB_bcdDev
             -ice);   
  76   1      
  77   1              AD7606_Init();
  78   1              USB_Int_Enable();
  79   1              T1=0;T2=0;Flag1=1;Flag2=0;
  80   1              Timer2_Init(AUX1); 
  81   1              Led=1;
  82   1              EA = 1;
  83   1              IP=0x20;                 
  84   1      
  85   1              while (1)
  86   1              {
  87   2                      if(Flag1==1)
  88   2                      {
  89   3                              Block_Write(out1,N);
  90   3                              Flag1=0;
  91   3                              Flag2=0;
  92   3                      }
  93   2                      if(Flag2==1)
  94   2                      {
  95   3                              Block_Write(out2,N);
  96   3                              Flag1=0;
  97   3                              Flag2=0;
  98   3                      }
  99   2              }
 100   1      }
 101          
 102          
 103          void AD7606_Init()
 104          {
 105   1              Delay();
 106   1              REST=0;
 107   1              OA=0;OB=0;OC=0;RAGE=0;
 108   1              CS_RD=1;
 109   1              CONVSTAB=0;
 110   1              REST=1;
 111   1              Delay();
 112   1              REST=0; 
 113   1      }
 114          
 115          void Oscilitator_Init()
C51 COMPILER V9.01   MAIN                                                                  05/28/2015 16:51:16 PAGE 3   

 116          {
 117   1              CLKMUL = 0x80;
 118   1          for (i = 0; i < 20; i++);
 119   1          CLKMUL |= 0xC0;
 120   1          while ((CLKMUL & 0x20) == 0);
 121   1          OSCICN = 0x83;
 122   1              CLKSEL |= 0x03; 
 123   1      }
 124          
 125          void Timer2_Init(U8 counts)
 126          {
 127   1         TMR2CN  = 0x00;                     // Stop Timer2; Clear TF2;
 128   1                                             // Use SYSCLK/12 as timebase
 129   1         CKCON  &= ~0x60;                    // Timer2 clocked based on T2XCLK;
 130   1      
 131   1         TMR2RL  = -counts;                  // Init reload values
 132   1         TMR2    = 0xffff;                   // Set to reload immediately
 133   1         ET2     = 1;                        // Enable Timer2 interrupts
 134   1         TR2     = 1;                        // Start Timer2
 135   1      }
 136          
 137          void Port_Init(void)
 138          {
 139   1              P0MDIN |= 0x40;
 140   1              P0MDOUT = 0xcc; 
 141   1              P1MDIN |= 0xff; 
 142   1              P1MDOUT = 0x00;
 143   1              P1 |= 0xff;
 144   1              P2MDOUT = 0xfb;
 145   1              P3MDIN |= 0xff; 
 146   1              P3MDOUT = 0x00;
 147   1              P3 |= 0xff;               
 148   1      
 149   1              XBR0 = 0x01;
 150   1              XBR1 = 0x40;
 151   1      }
 152          
 153          void Suspend_Device(void)
 154          {
 155   1         USB_Suspend();
 156   1      
 157   1      }
 158          
 159          void  USB_API_TEST_ISR(void) interrupt 17
 160          {
 161   1         BYTE INTVAL = Get_Interrupt_Source();
 162   1      
 163   1         if (INTVAL & DEV_SUSPEND)
 164   1         {
 165   2              Suspend_Device();
 166   2         }
 167   1      
 168   1         if (INTVAL & DEV_CONFIGURED)
 169   1         {
 170   2                      Port_Init();
 171   2         }
 172   1      }
 173          
 174          void Timer2_ISR (void) interrupt 5
 175          {
 176   1              //Led=~Led;
 177   1              TF2H = 0; // Clear Timer2 interrupt flag
C51 COMPILER V9.01   MAIN                                                                  05/28/2015 16:51:16 PAGE 4   

 178   1      
 179   1              CS_RD=0;
 180   1      
 181   1              if(Flag1==0)
 182   1              {
 183   2                      out1[T1]=P3;
 184   2                      T1=T1+1;
 185   2                      out1[T1]=P1;
 186   2                      T1=T1+1;
 187   2                      if(T1==N)
 188   2                      {
 189   3                              Flag1=1;
 190   3                              T1=0;
 191   3                      }
 192   2              }
 193   1              if(Flag2==0)
 194   1              {
 195   2                      out2[T2]=P3;
 196   2                      T2=T2+1;
 197   2                      out2[T2]=P1;
 198   2                      T2=T2+1;
 199   2                      if(T2==N)
 200   2                      {
 201   3                              Flag2=1;
 202   3                              T2=0;
 203   3                      }
 204   2              }
 205   1      
 206   1              CS_RD=1;
 207   1              CONVSTAB=0;     
 208   1      
 209   1              CONVSTAB=1;
 210   1      }
 211          
 212          void Delay (void)
 213          {
 214   1         int x;
 215   1         for(x = 0;x < 500;x)
 216   1            x++;
 217   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    474    ----
   CONSTANT SIZE    =     60    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
