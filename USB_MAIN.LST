C51 COMPILER V9.01   USB_MAIN                                                              05/12/2015 23:08:23 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE USB_MAIN
OBJECT MODULE PLACED IN USB_MAIN.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE USB_MAIN.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //#include "compiler_defs.h"
   2          #include <c8051f340.h>
   3          #include <stddef.h>
   4          #include "USB_MAIN.h"
   5          #include "USB_API.h"
   6          #include "F34x_USB_Register.h"
   7          #include "Delay.h"
   8          #include "C8051F340_AD7606.h"
   9          #include "stdio.h"
  10          
  11          sbit Led = P2^3;
  12          
  13          U8 In_Packet[2];
  14          U8 i;
  15          extern U8 t;
  16          extern U8 xdata out[2];
  17          U8 xdata out_test[128];
  18          
  19          /*** [BEGIN] USB Descriptor Information [BEGIN] ***/
  20          code const UINT USB_VID = 0x10C4;                                                               
  21          code const UINT USB_PID = 0xEA61;
  22          code const BYTE USB_MfrStr[] = {0x1A,0x03,'S',0,'i',0,'l',0,'i',0,'c',0,'o',0,'n',0,' ',0,'L',0,'a',0,'b',
             -0,'s',0};
  23          code const BYTE USB_ProductStr[] = {0x10,0x03,'U',0,'S',0,'B',0,' ',0,'A',0,'P',0,'I',0};
  24          code const BYTE USB_SerialStr[] = {0x0A,0x03,'i',0,'d',0,'r',0,'i',0};
  25          code const BYTE USB_MaxPower = 15;
  26          code const BYTE USB_PwAttributes = 0x80; // Bus-powered, remote wakeup not supported
  27          code const UINT USB_bcdDevice = 0x0100;
  28          /*** [ END ] USB Descriptor Information [ END ] ***/
  29          
  30          void Oscillator_Init(void);
  31          //void Sysclk_Init(void);
  32          void Port_Init(void);
  33          void Suspend_Device(void);      
  34          
  35          void main(void)
  36          {
  37   1         PCA0MD &= ~0x40;
  38   1         Oscillator_Init(); 
  39   1         //Sysclk_Init();
  40   1          
  41   1         USB_Clock_Start();
  42   1         USB_Init(USB_VID,USB_PID,USB_MfrStr,USB_ProductStr,USB_SerialStr,USB_MaxPower,USB_PwAttributes,USB_bcdD
             -evice);
  43   1         USB_Int_Enable();  
  44   1      
  45   1         Port_Init();
  46   1         AD7606_Init();
  47   1      
  48   1      //   for(i=0;i<128;i++)
  49   1      //   {
  50   1      //      out_test[i]=i;
  51   1      //   }
  52   1         
  53   1         while (1)
C51 COMPILER V9.01   USB_MAIN                                                              05/12/2015 23:08:23 PAGE 2   

  54   1         {
  55   2                      if(In_Packet[0]==1)
  56   2                              Led=1;
  57   2                      else
  58   2                              Led=0;
  59   2                      AD7606_Read();
  60   2                      if(t==1)
  61   2                      {
  62   3                              Block_Write(out, 2);
  63   3                              t=0;
  64   3                      }
  65   2                //Block_Write(out_test, 128);      
  66   2         }
  67   1      }
  68          
  69          void Port_Init(void)
  70          {
  71   1              P0MDIN |= 0x40;// Port 0 pin 3 set as BUSY input
  72   1              P0MDOUT = 0xcf; //0x10 : Set TX pin to push-pull        
  73   1      
  74   1              P1MDIN |= 0xff; 
  75   1              P1MDOUT = 0x00;
  76   1              P1 |= 0xff;//Set port latches to '1'
  77   1      
  78   1              P2MDOUT = 0xf8;
  79   1              //P2 |= 0x00;
  80   1      
  81   1              P3MDIN |= 0xff; 
  82   1              P3MDOUT = 0x00;
  83   1              P3 |= 0xff;//Set port latches to '1'              
  84   1      
  85   1              XBR0 = 0x00;// Enable UART0
  86   1              XBR1 = 0x40;// Enable crossbar and weak pull-ups
  87   1      }
  88          
  89          void Sysclk_Init(void)
  90          {
  91   1      //   OSCICN |= 0x03;    
  92   1      //   CLKMUL  = 0x00;     
  93   1      //   CLKMUL |= 0x80; 
  94   1      //   Delay(); 
  95   1      //   CLKMUL |= 0xC0;        
  96   1      //   Delay();                            
  97   1      //   while(!(CLKMUL & 0x20));
  98   1      //   CLKSEL  = 0x02; 
  99   1      }
 100          
 101          void Oscillator_Init()
 102          {                               
 103   1              
 104   1      //      int i = 0;
 105   1      //      //OSCICN = 0x83;
 106   1      //    FLSCL = 0x90;
 107   1      //      CLKMUL  = 0x00;
 108   1      //    CLKMUL |= 0x80;
 109   1      //    for (i = 0; i < 20; i++);    // Wait 5us for initialization
 110   1      //    CLKMUL |= 0xC0;
 111   1      //    while ((CLKMUL & 0x20) == 0);
 112   1      //    //CLKSEL    = 0x03;
 113   1      //    //OSCICN    = 0x83;
 114   1      //      CLKSEL  = 0x00; // Select to use internal osc. 
 115   1      //      //CLKSEL |= 0x00; // Select USB clock 
C51 COMPILER V9.01   USB_MAIN                                                              05/12/2015 23:08:23 PAGE 3   

 116   1              
 117   1                                              
 118   1          CLKSEL = 0x00; // Select the internal osc. as the SYSCLK source
 119   1          OSCICN = 0x83; // configure internal oscillator for 12MHz / 1
 120   1              RSTSRC = 0x04; // enable missing clock detector 
 121   1      
 122   1              CLKMUL  = 0x00; // Select internal oscillator as input to clock multiplier   
 123   1              CLKMUL |= 0x80; // Enable clock multiplier   
 124   1              Delay(); // Delay for clock multiplier to begin   
 125   1              CLKMUL |= 0xC0; // Initialize the clock multiplier   
 126   1              Delay(); // Delay for clock multiplier to begin   
 127   1              while(!(CLKMUL & 0x20)); // Wait for multiplier to lock 
 128   1              CLKSEL  = 0x02;
 129   1      }
 130          
 131          
 132          void Suspend_Device(void)
 133          {
 134   1         // Disable peripherals before calling USB_Suspend()
 135   1         P0MDIN = 0x00;                       // Port 0 configured as analog input
 136   1         P1MDIN = 0x00;                       // Port 1 configured as analog input
 137   1         P2MDIN = 0x00;                       // Port 2 configured as analog input
 138   1         P3MDIN = 0x00;                       // Port 3 configured as analog input
 139   1      
 140   1         USB_Suspend();                       // Put the device in suspend state
 141   1      
 142   1         // Once execution returns from USB_Suspend(), device leaves suspend state.Reenable peripherals
 143   1         P0MDIN = 0xFF;
 144   1         P1MDIN = 0x7F;                       // Port 1 pin 7 set as analog input
 145   1         P2MDIN = 0xFF;
 146   1         P3MDIN = 0x01;
 147   1      }
 148          
 149          // Example ISR for USB_API
 150          void  USB_API_TEST_ISR(void) interrupt 17
 151          {
 152   1         BYTE INTVAL = Get_Interrupt_Source();
 153   1      
 154   1         if (INTVAL & RX_COMPLETE)
 155   1         {
 156   2            Block_Read(In_Packet, 1);
 157   2         }
 158   1      
 159   1         if (INTVAL & DEV_SUSPEND)
 160   1         {
 161   2              Suspend_Device();
 162   2         }
 163   1      
 164   1         if (INTVAL & DEV_CONFIGURED)
 165   1         {
 166   2                      Oscillator_Init();
 167   2                      Port_Init();
 168   2         }
 169   1      }
 170          
 171          //-----------------------------------------------------------------------------
 172          // Delay(void)
 173          //-----------------------------------------------------------------------------
 174          // Used for a small pause, approximately 80 us in Full Speed,
 175          // and 1 ms when clock is configured for Low Speed
 176          //
 177          //-----------------------------------------------------------------------------
C51 COMPILER V9.01   USB_MAIN                                                              05/12/2015 23:08:23 PAGE 4   

 178          void Delay (void)
 179          {
 180   1         int x;
 181   1         for(x = 0;x < 500;x)
 182   1            x++;
 183   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    346    ----
   CONSTANT SIZE    =     60    ----
   XDATA SIZE       =    128    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
