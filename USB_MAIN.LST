C51 COMPILER V9.01   USB_MAIN                                                              05/14/2015 03:13:05 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE USB_MAIN
OBJECT MODULE PLACED IN USB_MAIN.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE USB_MAIN.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //#include "compiler_defs.h"
   2          #include <c8051f340.h>
   3          #include <stddef.h>
   4          #include <stdio.h>
   5          #include "USB_MAIN.h"
   6          #include "USB_API.h"
   7          #include "F34x_USB_Register.h"
   8          #include "Delay.h"
   9          #include "C8051F340_AD7606.h"
  10          #include "stdio.h"
  11          
  12          sbit Led = P2^3;
  13          
  14          U8 In_Packet[2];
  15          
  16          extern U8 xdata out1[256];
  17          extern U8 xdata out2[256];
  18          extern U8 xdata out3[256];
  19          extern U8 xdata out4[256];
  20          extern U8 xdata out5[256];
  21          extern U8 xdata out6[256];
  22          extern U8 xdata out7[256];
  23          extern U8 xdata out8[256];
  24          //extern U8 xdata out[2048];
  25          
  26          /*** [BEGIN] USB Descriptor Information [BEGIN] ***/
  27          code const UINT USB_VID = 0x10C4;                                                               
  28          code const UINT USB_PID = 0xEA61;
  29          code const BYTE USB_MfrStr[] = {0x1A,0x03,'S',0,'i',0,'l',0,'i',0,'c',0,'o',0,'n',0,' ',0,'L',0,'a',0,'b',
             -0,'s',0};
  30          code const BYTE USB_ProductStr[] = {0x10,0x03,'U',0,'S',0,'B',0,' ',0,'A',0,'P',0,'I',0};
  31          code const BYTE USB_SerialStr[] = {0x0A,0x03,'i',0,'d',0,'r',0,'i',0};
  32          code const BYTE USB_MaxPower = 15;
  33          code const BYTE USB_PwAttributes = 0x80; // Bus-powered, remote wakeup not supported
  34          code const UINT USB_bcdDevice = 0x0100;
  35          /*** [ END ] USB Descriptor Information [ END ] ***/
  36          
  37          void Sysclk_Init(void);
  38          void Oscillator_Init(void);
  39          void USB0_Init(void);
  40          void Port_Init(void);
  41          void Suspend_Device(void);      
  42          
  43          void main(void)
  44          {
  45   1         PCA0MD &= ~0x40;
  46   1         Sysclk_Init(); 
  47   1         //Oscillator_Init();
  48   1         Port_Init();
  49   1         USB0_Init(); 
  50   1         //USB_Clock_Start();
  51   1         USB_Init(USB_VID,USB_PID,USB_MfrStr,USB_ProductStr,USB_SerialStr,USB_MaxPower,USB_PwAttributes,USB_bcdD
             -evice);   
  52   1      
  53   1         AD7606_Init();
C51 COMPILER V9.01   USB_MAIN                                                              05/14/2015 03:13:05 PAGE 2   

  54   1         USB_Int_Enable();
  55   1         
  56   1         while (1)
  57   1         {
  58   2                      if(In_Packet[0]==1)
  59   2                              Led=1;
  60   2                      else
  61   2                              Led=0;
  62   2      
  63   2                      AD7606_ContinuesRead();
  64   2                      Block_Write(out1, 256);
  65   2                      Block_Write(out2, 256);
  66   2                      Block_Write(out3, 256);
  67   2                      Block_Write(out4, 256);
  68   2                      Block_Write(out5, 256);
  69   2                      Block_Write(out6, 256);
  70   2                      Block_Write(out7, 256);
  71   2                      Block_Write(out8, 256);
  72   2      //              Block_Write(out, 2048);      
  73   2         }
  74   1      }
  75          
  76          void Sysclk_Init(void)
  77          {
  78   1          CLKSEL = 0x00; // Select the internal osc. as the SYSCLK source
  79   1          OSCICN = 0x83; // configure internal oscillator for 12MHz / 1
  80   1              RSTSRC = 0x04; // enable missing clock detector 
  81   1      
  82   1              OSCICN = 0x83;
  83   1              CLKMUL  = 0x00; 
  84   1              CLKMUL |= 0x80; // Enable clock multiplier   
  85   1              Delay(); // Delay for clock multiplier to begin   
  86   1              CLKMUL |= 0xC0; // Initialize the clock multiplier   
  87   1              Delay(); // Delay for clock multiplier to begin   
  88   1              while(!(CLKMUL & 0x20)); // Wait for multiplier to lock
  89   1              CLKSEL = SYS_4X_DIV_2; 
  90   1      }
  91          
  92          void Oscillator_Init()
  93          {                                                               
  94   1          CLKSEL = 0x00; // Select the internal osc. as the SYSCLK source
  95   1          OSCICN = 0x83; // configure internal oscillator for 12MHz / 1
  96   1              RSTSRC = 0x04; // enable missing clock detector
  97   1      }
  98          
  99          void USB0_Init(void)
 100          {
 101   1         POLL_WRITE_BYTE(POWER,  0x08);          // Force Asynchronous USB Reset
 102   1         POLL_WRITE_BYTE(IN1IE,  0x07);          // Enable Endpoint 0-2 in interrupts
 103   1         POLL_WRITE_BYTE(OUT1IE, 0x07);          // Enable Endpoint 0-2 out interrupts
 104   1         POLL_WRITE_BYTE(CMIE,   0x07);          // Enable Reset, Resume, and Suspend interrupts
 105   1      
 106   1         USB0XCN = 0xE0;                         // Enable transceiver; select full speed
 107   1         POLL_WRITE_BYTE(CLKREC, 0x80);          // Enable clock recovery, single-step mode disabled
 108   1      
 109   1         EIE1 |= 0x02; // Enable USB0 Interrupts;Global Interrupt enable;Enable USB0 by clearing the USB Inhibit
             - bit
 110   1         POLL_WRITE_BYTE(POWER,  0x01); // and enable suspend detection
 111   1      }
 112          
 113          void Port_Init(void)
 114          {
C51 COMPILER V9.01   USB_MAIN                                                              05/14/2015 03:13:05 PAGE 3   

 115   1              P0MDIN |= 0x40;// Port 0 pin 3 set as BUSY input
 116   1              P0MDOUT = 0xcf; //0x10 : Set TX pin to push-pull        
 117   1      
 118   1              P1MDIN |= 0xff; 
 119   1              P1MDOUT = 0x00;
 120   1              P1 |= 0xff;//Set port latches to '1'
 121   1      
 122   1              P2MDOUT = 0xf8;
 123   1              //P2 |= 0x00;
 124   1      
 125   1              P3MDIN |= 0xff; 
 126   1              P3MDOUT = 0x00;
 127   1              P3 |= 0xff;//Set port latches to '1'              
 128   1      
 129   1              XBR0 = 0x01;// Enable UART0
 130   1              XBR1 = 0x40;// Route CEX0 to P0.0,Enable crossbar and weak pull-ups
 131   1      }
 132          
 133          void Suspend_Device(void)
 134          {
 135   1         // Disable peripherals before calling USB_Suspend()
 136   1      //   P0MDIN = 0x00;                       // Port 0 configured as analog input
 137   1      //   P1MDIN = 0x00;                       // Port 1 configured as analog input
 138   1      //   P2MDIN = 0x00;                       // Port 2 configured as analog input
 139   1      //   P3MDIN = 0x00;                       // Port 3 configured as analog input
 140   1      
 141   1         USB_Suspend();                       // Put the device in suspend state
 142   1      
 143   1         // Once execution returns from USB_Suspend(), device leaves suspend state.Reenable peripherals
 144   1      //   P0MDIN = 0xFF;
 145   1      //   P1MDIN = 0xFF;                       // Port 1 pin 7 set as analog input
 146   1      //   P2MDIN = 0xFF;
 147   1      //   P3MDIN = 0xFF;
 148   1      }
 149          
 150          // Example ISR for USB_API
 151          void  USB_API_TEST_ISR(void) interrupt 17
 152          {
 153   1         BYTE INTVAL = Get_Interrupt_Source();
 154   1      
 155   1         if (INTVAL & RX_COMPLETE)
 156   1         {
 157   2            Block_Read(In_Packet, 1);
 158   2         }
 159   1      
 160   1         if (INTVAL & DEV_SUSPEND)
 161   1         {
 162   2              Suspend_Device();
 163   2         }
 164   1      
 165   1         if (INTVAL & DEV_CONFIGURED)
 166   1         {
 167   2                      Oscillator_Init();
 168   2                      Port_Init();
 169   2         }
 170   1      }
 171          
 172          void Delay (void)
 173          {
 174   1         int x;
 175   1         for(x = 0;x < 500;x)
 176   1            x++;
C51 COMPILER V9.01   USB_MAIN                                                              05/14/2015 03:13:05 PAGE 4   

 177   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    493    ----
   CONSTANT SIZE    =     60    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
