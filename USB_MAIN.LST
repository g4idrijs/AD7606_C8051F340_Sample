C51 COMPILER V9.01   USB_MAIN                                                              05/03/2015 18:08:33 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE USB_MAIN
OBJECT MODULE PLACED IN USB_MAIN.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE USB_MAIN.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <c8051f340.h>
   2          #include <stddef.h>
   3          #include "USB_API.h"
   4          #include "C8051F340_AD7606.h"
   5          #include "stdio.h"
   6          
   7          #define SYSCLK 12000000
   8          #define BAUDRATE 115200
   9          sbit Led = P2^3; // LED='1' means ON
  10          unsigned char Out_Packet[3] = {0,0,0};   // Last packet received from host
  11          extern unsigned char Data[2];
  12          
  13          /*** [BEGIN] USB Descriptor Information [BEGIN] ***/
  14          code const UINT USB_VID = 0x10C4;                                                               
  15          code const UINT USB_PID = 0xEA61;
  16          code const BYTE USB_MfrStr[] = {0x1A,0x03,'S',0,'i',0,'l',0,'i',0,'c',0,'o',0,'n',0,' ',0,'L',0,'a',0,'b',
             -0,'s',0};                       // Manufacturer String
  17          code const BYTE USB_ProductStr[] = {0x10,0x03,'U',0,'S',0,'B',0,' ',0,'A',0,'P',0,'I',0}; // Product Desc.
             - String
  18          code const BYTE USB_SerialStr[] = {0x0A,0x03,'i',0,'d',0,'r',0,'i',0};
  19          code const BYTE USB_MaxPower = 15;            // Max current = 30 mA (15 * 2)
  20          code const BYTE USB_PwAttributes = 0x80;      // Bus-powered, remote wakeup not supported
  21          code const UINT USB_bcdDevice = 0x0100;       // Device release number 1.00
  22          /*** [ END ] USB Descriptor Information [ END ] ***/
  23          
  24          void Oscillator_Init();
  25          void Port_Init(void);
  26          //void UART0_Init(void);
  27          void Suspend_Device(void);
  28          
  29          void main(void)
  30          {
  31   1         PCA0MD &= ~0x40;
  32   1         Oscillator_Init();
  33   1         Port_Init();
  34   1         //UART0_Init();
  35   1         USB_Clock_Start();
  36   1         USB_Init(USB_VID,USB_PID,USB_MfrStr,USB_ProductStr,USB_SerialStr,USB_MaxPower,USB_PwAttributes,USB_bcdD
             -evice);
  37   1         USB_Int_Enable();
  38   1      
  39   1         AD7606_Init();
  40   1      
  41   1         //EA = 1;
  42   1         while (1)
  43   1         {
  44   2            if (Out_Packet[0] == 1) Led = 1;
  45   2            else Led = 0;
  46   2                AD7606_Read();
  47   2                //printf("%d ",Data[0]);
  48   2                //printf("%d    ",Data[1]);
  49   2                Out_Packet[1] = Data[0];
  50   2                Out_Packet[2] = Data[1];
  51   2                //Block_Write(Data, 2);
  52   2                Block_Write(Out_Packet, 3);     
C51 COMPILER V9.01   USB_MAIN                                                              05/03/2015 18:08:33 PAGE 2   

  53   2         }
  54   1      }
  55          
  56          void Port_Init(void)
  57          {
  58   1              P0MDIN |= 0x40;// Port 0 pin 3 set as BUSY input
  59   1              P0MDOUT = 0xcf; //0x10 : Set TX pin to push-pull        
  60   1      
  61   1              P1MDIN |= 0xff; 
  62   1              P1MDOUT = 0x00;
  63   1              P1 |= 0xff;//Set port latches to '1'
  64   1      
  65   1              //P2MDIN |= 0x00;
  66   1              P2MDOUT = 0x08;
  67   1      
  68   1              P3MDIN |= 0xff; 
  69   1              P3MDOUT = 0x00;
  70   1              P3 |= 0xff;//Set port latches to '1'              
  71   1      
  72   1              XBR0 = 0x01;// Enable UART0
  73   1              XBR1 = 0x40;// Enable crossbar and weak pull-ups
  74   1      }
  75          
  76          void Oscillator_Init()
  77          {                                                               
  78   1          CLKSEL = 0x00; // Select the internal osc. as the SYSCLK source
  79   1          OSCICN = 0x83; // configure internal oscillator for 12MHz / 1
  80   1              RSTSRC = 0x04; // enable missing clock detector
  81   1      }
  82          
  83          //void UART0_Init (void)
  84          //{
  85          //   SCON0 = 0x10; // SCON0: 8-bit variable bit rate
  86          //   if (SYSCLK/BAUDRATE/2/256 < 1) {
  87          //      TH1 = -(SYSCLK/BAUDRATE/2);
  88          //      CKCON &= ~0x0B;                  // T1M = 1; SCA1:0 = xx
  89          //      CKCON |=  0x08;
  90          //   } else if (SYSCLK/BAUDRATE/2/256 < 4) {
  91          //      TH1 = -(SYSCLK/BAUDRATE/2/4);
  92          //      CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 01                  
  93          //      CKCON |=  0x01;
  94          //   } else if (SYSCLK/BAUDRATE/2/256 < 12) {
  95          //      TH1 = -(SYSCLK/BAUDRATE/2/12);
  96          //      CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 00
  97          //   } else {
  98          //      TH1 = -(SYSCLK/BAUDRATE/2/48);
  99          //      CKCON &= ~0x0B;                  // T1M = 0; SCA1:0 = 10
 100          //      CKCON |=  0x02;
 101          //   }
 102          //
 103          //   TL1 = TH1;                          // Init Timer1
 104          //   TMOD &= ~0xf0;                      // TMOD: timer 1 in 8-bit autoreload
 105          //   TMOD |=  0x20;                       
 106          //   TR1 = 1;                            // START Timer1
 107          //   TI0 = 1;                            // Indicate TX0 ready
 108          //}
 109          
 110          void Suspend_Device(void)
 111          {
 112   1         // Disable peripherals before calling USB_Suspend()
 113   1         P0MDIN = 0x00;                       // Port 0 configured as analog input
 114   1         P1MDIN = 0x00;                       // Port 1 configured as analog input
C51 COMPILER V9.01   USB_MAIN                                                              05/03/2015 18:08:33 PAGE 3   

 115   1         P2MDIN = 0x00;                       // Port 2 configured as analog input
 116   1         P3MDIN = 0x00;                       // Port 3 configured as analog input
 117   1      
 118   1         USB_Suspend();                       // Put the device in suspend state
 119   1      
 120   1         // Once execution returns from USB_Suspend(), device leaves suspend state.Reenable peripherals
 121   1         P0MDIN = 0xFF;
 122   1         P1MDIN = 0x7F;                       // Port 1 pin 7 set as analog input
 123   1         P2MDIN = 0xFF;
 124   1         P3MDIN = 0x01;
 125   1      }
 126          
 127          // Example ISR for USB_API
 128          void  USB_API_TEST_ISR(void) interrupt 17
 129          {
 130   1         BYTE INTVAL = Get_Interrupt_Source();
 131   1      
 132   1         if (INTVAL & RX_COMPLETE)
 133   1         {
 134   2            Block_Read(Out_Packet, 3);
 135   2         }
 136   1      
 137   1         if (INTVAL & DEV_SUSPEND)
 138   1         {
 139   2              Suspend_Device();
 140   2         }
 141   1      
 142   1         if (INTVAL & DEV_CONFIGURED)
 143   1         {
 144   2                      Oscillator_Init();
 145   2                      Port_Init();
 146   2         }
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    307    ----
   CONSTANT SIZE    =     60    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
