C51 COMPILER V9.53.0.0   USB_MAIN                                                          05/19/2015 19:56:34 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE USB_MAIN
OBJECT MODULE PLACED IN .\src\USB_MAIN.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe G:\AD7606_C8051F
                    -340_Sample\AD7606_C8051F340_SimplicityStudio\src\USB_MAIN.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLO
                    -ATFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:/SiliconLabs/SimplicityStudio/v3/dev
                    -eloper/sdks/si8051/v3//Device/shared/si8051Base;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/C805
                    -1F340;C:/SiliconLabs/SimplicityStudio/v3/developer/sdks/si8051/v3//Device/C8051F340/inc) REGFILE(emptyProject.ORC) PRINT
                    -(.\src\USB_MAIN.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\USB_MAIN.OBJ)

line level    source

   1          #include "compiler_defs.h"
   2          #include "C8051F340.h"
   3          #include "USB_API.h"
   4          #include "Delay.h"
   5          
   6          /*** [BEGIN] USB Descriptor Information [BEGIN] ***/
   7          code const UINT USB_VID = 0x10C4;
   8          code const UINT USB_PID = 0xEA61;
   9          code const U8 USB_MfrStr[] = {0x1A,0x03,'S',0,'i',0,'l',0,'i',0,'c',0,'o',0,'n',0,' ',0,'L',0,'a',0,'b',0,
             -'s',0};
  10          code const U8 USB_ProductStr[] = {0x10,0x03,'U',0,'S',0,'B',0,' ',0,'A',0,'P',0,'I',0};
  11          code const U8 USB_SerialStr[] = {0x0A,0x03,'i',0,'d',0,'r',0,'i',0};
  12          code const U8 USB_MaxPower = 15;
  13          code const U8 USB_PwAttributes = 0x80; // Bus-powered, remote wakeup not supported
  14          code const UINT USB_bcdDevice = 0x0100;
  15          /*** [ END ] USB Descriptor Information [ END ] ***/
  16          
  17          /*** [BEGIN]  [BEGIN] ***/
  18          sbit CS_RD=P0^0;
  19          sbit CONVSTAB=P0^1;
  20          sbit BUSY=P0^6;
  21          sbit REST=P0^7;
  22          sbit OA=P2^4;
  23          sbit OB=P2^5;
  24          sbit OC=P2^6;
  25          sbit RAGE= P2^7;
  26          sbit Led = P2^3;
  27          /*** [ END ]  [ END ] ***/
  28          
  29          /*** [BEGIN]  [BEGIN] ***/
  30          #define SYSCLK 12000000/8
  31          #define TIMER_PRESCALER 12  // Based on Timer2 CKCON and TMR2CN settings
  32          #define RATE    43000 //if LED_TOGGLE_RATE = 1, the LED will be on for 1 second and off for 1 second
  33          // There are SYSCLK/TIMER_PRESCALER timer ticks per second, so
  34          // SYSCLK/TIMER_PRESCALER timer ticks per second.
  35          #define TIMER_TICKS_PER_S  SYSCLK/TIMER_PRESCALER
  36          // NoteRATE*TIMER_TICKS_PERS should not exceed 65535 (0xFFFF)for the 16-bit timer
  37          #define AUX1 TIMER_TICKS_PER_S/RATE
  38          #define AUX2 -AUX1
  39          #define TIMER2_RELOAD AUX2  // Reload value for Timer2
  40          
  41          sfr16 TMR2RL = 0xca; // Timer2 reload value 
  42          sfr16 TMR2 = 0xcc; // Timer2 counter
  43          /*** [ END ]  [ END ] ***/
  44          
  45          /*** [BEGIN]  [BEGIN] ***/
  46          #define N 32
  47          
  48          U8 data temp[2];
  49          U8 data Busy;
  50          U8 data out[N];
C51 COMPILER V9.53.0.0   USB_MAIN                                                          05/19/2015 19:56:34 PAGE 2   

  51          U16 data t;
  52          /*** [ END ]  [ END ] ***/
  53          
  54          /*** [BEGIN]  [BEGIN] ***/
  55          void Port_Init(void);
  56          void Suspend_Device(void);
  57          void Delay(void);       
  58          void AD7606_Init(void);
  59          void AD7606_Read(void);
  60          void Timer2_1_Init();
  61          void Timer2_2_Init();
  62          /*** [ END ]  [ END ] ***/
  63          
  64          void main(void)
  65          {
  66   1              PCA0MD &= ~0x40;
  67   1              Port_Init(); 
  68   1              USB_Clock_Start();
  69   1              CLKSEL |= 0x02;
  70   1              USB_Init(USB_VID,USB_PID,USB_MfrStr,USB_ProductStr,USB_SerialStr,USB_MaxPower,USB_PwAttributes,USB_bcdDev
             -ice);   
  71   1      
  72   1              AD7606_Init();
  73   1              USB_Int_Enable();
  74   1      
  75   1              Timer2_1_Init(); 
  76   1              EA=1;
  77   1              t=0;   
  78   1              while (1)
  79   1              {       
  80   2              }
  81   1      }
  82          
  83          void AD7606_Init()
  84          {
  85   1              delay80us();
  86   1              REST=0;
  87   1              OA=0;OB=0;OC=0;RAGE=0;
  88   1              CS_RD=1;
  89   1              CONVSTAB=0;
  90   1              REST=1;
  91   1              delay1us();
  92   1              REST=0;
  93   1              
  94   1      }
  95          
  96          void AD7606_Read()
  97          {
  98   1              CONVSTAB=1;     
  99   1              if(t<N/2)
 100   1              {
 101   2                      out[t*2]=temp[0];
 102   2                      out[(t++)*2+1]=temp[1];
 103   2              }
 104   1              else
 105   1              {
 106   2                      Block_Write(out,N);
 107   2                      t=0;
 108   2              }
 109   1              Busy=BUSY;
 110   1              while(Busy==1)
 111   1              {
 112   2                      Busy=BUSY;
C51 COMPILER V9.53.0.0   USB_MAIN                                                          05/19/2015 19:56:34 PAGE 3   

 113   2              }       
 114   1              CS_RD=0;
 115   1              temp[0]=P3;
 116   1              temp[1]=P1;
 117   1              CS_RD=1;
 118   1              CONVSTAB=0;
 119   1      }
 120          
 121          // This function configures Timer2 as a 16-bit reload timer, interrupt enabled.
 122          // Using the SYSCLK at 12MHz/8 with a 1:12 prescaler.
 123          // Note: The Timer2 uses a 1:12 prescaler.  If this setting changes, the
 124          // TIMER_PRESCALER constant must also be changed.
 125          void Timer2_1_Init ()
 126          {
 127   1         CKCON &= ~0x60; // Timer2 uses SYSCLK/12
 128   1         TMR2CN &= ~0x01;
 129   1      
 130   1         TMR2RL = TIMER2_RELOAD; // Reload value to be used in Timer2
 131   1         TMR2 = TMR2RL; // Init the Timer2 register
 132   1      
 133   1         TMR2CN = 0x04; // Enable Timer2 in auto-reload mode
 134   1         ET2 = 1; 
 135   1      }
 136          
 137          // Configure Timer2 to 16-bit auto-reload and generate an interrupt at 100uS 
 138          // intervals.  Timer 2 overflow automatically triggers ADC0 conversion.
 139          void Timer2_2_Init ()
 140          {
 141   1         TMR2CN  = 0x00; // Stop Timer2; Clear TF2;use SYSCLK as timebase, 16-bit auto-reload
 142   1         CKCON  |= 0x10; // select SYSCLK for timer 2 source
 143   1         TMR2RL  = 65535 - (12000000 / 400000);
 144   1         TMR2    = 0xffff; // set to reload immediately
 145   1         TR2     = 1; // start Timer2
 146   1      }
 147          
 148          void Port_Init(void)
 149          {
 150   1              P0MDIN |= 0x40;// 0x40:BUSY input
 151   1              P0MDOUT = 0xcc; //0x10 : Set TX pin to push-
 152   1              P2MDOUT = 0xfb;
 153   1      
 154   1              P1MDIN |= 0xff; 
 155   1              P1MDOUT = 0x00;
 156   1              P1 |= 0xff;
 157   1              P3MDIN |= 0xff; 
 158   1              P3MDOUT = 0x00;
 159   1              P3 |= 0xff;               
 160   1      
 161   1              XBR0 = 0x01;// Enable UART0
 162   1              XBR1 = 0x40;// Route CEX0 to P0.0,Enable crossbar and weak pull-ups
 163   1      }
 164          
 165          void Suspend_Device(void)
 166          {
 167   1         USB_Suspend();       // Put the device in suspend state
 168   1      
 169   1      }
 170          
 171          // Example ISR for USB_API
 172          void  USB_API_TEST_ISR(void) interrupt 17
 173          {
 174   1         BYTE INTVAL = Get_Interrupt_Source();
 175   1      
C51 COMPILER V9.53.0.0   USB_MAIN                                                          05/19/2015 19:56:34 PAGE 4   

 176   1         if (INTVAL & DEV_SUSPEND)
 177   1         {
 178   2              Suspend_Device();
 179   2         }
 180   1      
 181   1         if (INTVAL & DEV_CONFIGURED)
 182   1         {
 183   2                      Port_Init();
 184   2         }
 185   1      }
 186          
 187          void Timer2_ISR (void) interrupt 5
 188          {
 189   1         TF2H = 0; // Clear Timer2 interrupt flag
 190   1         AD7606_Read();
 191   1      }
 192          
 193          void Delay (void)
 194          {
 195   1         int x;
 196   1         for(x = 0;x < 500;x)
 197   1            x++;
 198   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    471    ----
   CONSTANT SIZE    =     60    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
